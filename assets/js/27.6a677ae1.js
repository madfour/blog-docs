(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{476:function(i,l,e){"use strict";e.r(l);var t=e(27),v=Object(t.a)({},(function(){var i=this,l=i.$createElement,e=i._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[e("p",[e("strong",[i._v("BFC（块级格式上下文）")]),i._v("，是页面盒模型布局中的一种 CSS 渲染模式，相当于一个独立的容器，里面的元素和外部的元素相互不影响")]),i._v(" "),e("h2",{attrs:{id:"bfc-的布局规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc-的布局规则"}},[i._v("#")]),i._v(" BFC 的布局规则")]),i._v(" "),e("ul",[e("li",[i._v("容器里/外的元素，互不影响")]),i._v(" "),e("li",[i._v("内部的 Box 会在垂直方向，一个接一个地放置。")]),i._v(" "),e("li",[i._v("Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。")]),i._v(" "),e("li",[i._v("每个盒子（块盒与行盒）的 margin box 的左边，与包含块 border box 的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。")]),i._v(" "),e("li",[i._v("BFC 的区域不会与 float box 重叠。")]),i._v(" "),e("li",[i._v("计算 BFC 的高度时，浮动元素也参与计算。")])]),i._v(" "),e("h2",{attrs:{id:"创建-bfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-bfc"}},[i._v("#")]),i._v(" 创建 BFC")]),i._v(" "),e("ul",[e("li",[i._v("根元素或包含根元素的元素")]),i._v(" "),e("li",[i._v("浮动元素(float 不为 none)")]),i._v(" "),e("li",[i._v("绝对定位元素(position 为 absolute 或者 fixed)")]),i._v(" "),e("li",[i._v("display 为 inline-block,table-cell,table-caption")]),i._v(" "),e("li",[i._v("overflow 值不为 visible")]),i._v(" "),e("li",[i._v("弹性元素(flex 布局)")]),i._v(" "),e("li",[i._v("网格元素(grid 布局)")])]),i._v(" "),e("h2",{attrs:{id:"bfc-主要的作用是"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc-主要的作用是"}},[i._v("#")]),i._v(" BFC 主要的作用是")]),i._v(" "),e("ul",[e("li",[i._v("清除浮动")]),i._v(" "),e("li",[i._v("防止同一 BFC 容器中的相邻元素间的外边距重叠问题")])]),i._v(" "),e("hr"),i._v(" "),e("h2",{attrs:{id:"扩展-ifc、gfc-和-ffc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展-ifc、gfc-和-ffc"}},[i._v("#")]),i._v(" 扩展 IFC、GFC 和 FFC")]),i._v(" "),e("ul",[e("li",[e("p",[i._v("IFC(Inline Formatting Contexts)："),e("strong",[i._v("内联格式上下文")]),i._v("\nIFC 的"),e("code",[i._v("line box")]),i._v("(线框)高度由其包含行内元素中最高的实际高度计算而来（不受垂直方向的 padding/margin 影响）。\nIFC 的"),e("code",[i._v("line box")]),i._v("一般左右都贴近整个 IFC，但会因为"),e("code",[i._v("float")]),i._v("元素而扰乱，float 元素会位于 IFC 与与 line box 之间，使得 line box 宽度缩短。")]),i._v(" "),e("p",[i._v("同个 IFC 下的多个"),e("code",[i._v("line box")]),i._v("高度会不同。 IFC 中时不可能有块级元素的，当插入块级元素时（如 p 中插入 div）会产生两个匿名块与 div 分隔开，即产生两个 IFC，每个 IFC 对外表现为块级元素，与 div 垂直排列。")]),i._v(" "),e("p",[e("strong",[i._v("IFC 作用：")]),i._v("\n水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生 IFC，通过 text-align 则可以使其水平居中。\n垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 vertical-align:middle，其他行内元素则可以在此父元素下垂直居中。")])]),i._v(" "),e("li",[e("p",[i._v("GFC(GridLayout Formatting Contexts)："),e("strong",[i._v("网格布局格式化上下文")]),i._v("（display: grid）")]),i._v(" "),e("ul",[e("li",[e("p",[i._v("当为一个元素设置 display 值为 grid 的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。")])]),i._v(" "),e("li",[e("p",[i._v("GFC 作用与 table 的区别：首先同样是一个二维的表格，但 GridLayout 会有更加丰富的属性来控制行列，控制对齐以及更为精细的渲染语义和控制（你要实现类似九宫格，拼图之类的布局效果显得格外的容易）。")])])])])]),i._v(" "),e("ul",[e("li",[i._v("FFC(Flex Formatting Contexts)：自适应格式上下文（display: flex）\n"),e("ul",[e("li",[i._v("display 值为 flex 或者 inline-flex 的元素将会生成自适应容器（flex container），只有谷歌和火狐支持，不过在移动端端足够，\nFlex Box 由伸缩容器和伸缩项目组成。通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器。设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。\n伸缩容器中的每一个子元素都是一个伸缩项目。伸缩项目可以是任意数量的。伸缩容器外和伸缩项目内的一切元素都不受影响。简单地说，Flexbox 定义了伸缩容器内伸缩项目该如何布局。")]),i._v(" "),e("li",[i._v("FFC&BFC 类似，区别：\nFlexbox 不支持 ::first-line 和 ::first-letter 这两种伪元素；\nvertical-align 对 Flexbox 中的子元素 是没有效果的；\nfloat 和 clear 属性对 Flexbox 中的子元素是没有效果的，也不会使子元素脱离文档流(但是对 Flexbox 是有效果的！)；\n多栏布局（column-*） 在 Flexbox 中也是失效的，就是说我们不能使用多栏布局在 Flexbox 排列其下的子元素；\nFlexbox 下的子元素不会继承父级容器的宽。")])])])])])}),[],!1,null,null,null);l.default=v.exports}}]);